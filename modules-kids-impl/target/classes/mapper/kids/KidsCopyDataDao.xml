<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.booktable.modules.dao.kids.KidsCopyDataDao">

	<resultMap id="BaseResultMap" type="kidsCopyDataDo" >
		<result column="id" property="id" />
<result column="tableName" property="tableName" />
<result column="content" property="content" />
<result column="create_time" property="createTime" />

	</resultMap>

	<insert id="insert" parameterType="kidsCopyDataDo"   keyProperty="id"  useGeneratedKeys="true"  >
		INSERT INTO kids_copy_data (  tableName, content, create_time ) VALUES 
		(#{tableName} ,#{content} ,#{createTime} )
	</insert>



	<select id="queryList" parameterType="map" resultType="kidsCopyDataDo">
	SELECT * FROM  kids_copy_data  WHERE 1=1 
	<if test="id != null"> and id = #{id} </if>
		<if test="tableName != null and tableName !='' "> and tableName = #{tableName} </if>
		<if test="content != null and content !='' "> and content = #{content} </if>
		<if test="createTime != null"> and create_time = #{createTime} </if>

	</select>

	<select id="queryListPage" parameterType="map" resultType="kidsCopyDataDo">
	SELECT * FROM  kids_copy_data WHERE 1=1 
	<if test="id != null"> and id = #{id} </if>
		<if test="tableName != null and tableName !='' "> and tableName = #{tableName} </if>
		<if test="content != null and content !='' "> and content = #{content} </if>
		<if test="createTime != null"> and create_time = #{createTime} </if>

	 order by id desc
	</select>
	
		
	<update id="updateById" parameterType="kidsCopyDataDo"> 
	 UPDATE kids_copy_data SET tableName = #{tableName},content = #{content},
	  WHERE id = #{id} 
	</update>
	
	
	<delete id="deleteById" parameterType="Long">
	 DELETE FROM kids_copy_data WHERE id = #{id}
	</delete>
	
	<select id="findById" parameterType="Long" resultType="kidsCopyDataDo">
	 SELECT * FROM kids_copy_data WHERE id = #{id}
	</select>


	<insert id="insertTableData" parameterType="kidsCopyDataDo"    >
			INSERT INTO ${tableName}
			<foreach collection="fieldMap"  index="colName" item="id" separator="," open="(" close=")">
				${colName}
			</foreach>
			VALUES
			<foreach collection="fieldMap"  index="colName" item="id" separator="," open="(" close=")">
				#{id}
			</foreach>

	</insert>
</mapper>